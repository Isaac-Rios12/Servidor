
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  direccion: 'direccion'
};

exports.Prisma.LibroScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  fechaPublicacion: 'fechaPublicacion',
  disponible: 'disponible'
};

exports.Prisma.AutorScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.LibroAutorScalarFieldEnum = {
  libroId: 'libroId',
  autorId: 'autorId'
};

exports.Prisma.PrestamoScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  libroId: 'libroId',
  fechaPrestamo: 'fechaPrestamo',
  fechaDevolucion: 'fechaDevolucion'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Usuario: 'Usuario',
  Libro: 'Libro',
  Autor: 'Autor',
  LibroAutor: 'LibroAutor',
  Prestamo: 'Prestamo'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Admin\\Desktop\\Proyecto Servidor\\backend\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Admin\\Desktop\\Proyecto Servidor\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Usuario {\n  id        Int        @id @default(autoincrement())\n  nombre    String\n  direccion String?\n  Prestamos Prestamo[]\n}\n\nmodel Libro {\n  id               Int          @id @default(autoincrement())\n  titulo           String\n  fechaPublicacion DateTime?\n  disponible       Boolean\n  LibroAutor       LibroAutor[]\n  Prestamos        Prestamo[]\n}\n\nmodel Autor {\n  id         Int          @id @default(autoincrement())\n  nombre     String\n  LibroAutor LibroAutor[]\n}\n\nmodel LibroAutor {\n  libroId Int\n  autorId Int\n  autor   Autor @relation(fields: [autorId], references: [id])\n  libro   Libro @relation(fields: [libroId], references: [id])\n\n  @@id([libroId, autorId])\n}\n\nmodel Prestamo {\n  id              Int       @id @default(autoincrement())\n  usuarioId       Int\n  libroId         Int\n  fechaPrestamo   DateTime\n  fechaDevolucion DateTime?\n  libro           Libro     @relation(fields: [libroId], references: [id])\n  usuario         Usuario   @relation(fields: [usuarioId], references: [id])\n\n  @@unique([usuarioId, libroId, fechaPrestamo])\n}\n",
  "inlineSchemaHash": "c783ebbd8b0c4e48dcce7d304b9cee9c54baad636ede3673e9ce15bfaa91a3f6",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Usuario\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"direccion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Prestamos\",\"kind\":\"object\",\"type\":\"Prestamo\",\"relationName\":\"PrestamoToUsuario\"}],\"dbName\":null},\"Libro\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"titulo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fechaPublicacion\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"disponible\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"LibroAutor\",\"kind\":\"object\",\"type\":\"LibroAutor\",\"relationName\":\"LibroToLibroAutor\"},{\"name\":\"Prestamos\",\"kind\":\"object\",\"type\":\"Prestamo\",\"relationName\":\"LibroToPrestamo\"}],\"dbName\":null},\"Autor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"LibroAutor\",\"kind\":\"object\",\"type\":\"LibroAutor\",\"relationName\":\"AutorToLibroAutor\"}],\"dbName\":null},\"LibroAutor\":{\"fields\":[{\"name\":\"libroId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"autorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"autor\",\"kind\":\"object\",\"type\":\"Autor\",\"relationName\":\"AutorToLibroAutor\"},{\"name\":\"libro\",\"kind\":\"object\",\"type\":\"Libro\",\"relationName\":\"LibroToLibroAutor\"}],\"dbName\":null},\"Prestamo\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"usuarioId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"libroId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fechaPrestamo\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fechaDevolucion\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"libro\",\"kind\":\"object\",\"type\":\"Libro\",\"relationName\":\"LibroToPrestamo\"},{\"name\":\"usuario\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"PrestamoToUsuario\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

